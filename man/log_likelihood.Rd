% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitting.R
\name{log_likelihood}
\alias{log_likelihood}
\title{Calculate the log likelihood of a graph with parameters, given observation.}
\usage{
log_likelihood(f, concentration, matrix, graph,
  parameters = extract_graph_parameters(graph))
}
\arguments{
\item{f}{The observed f-statistics (the column D from data).}

\item{concentration}{The Cholesky decomposition of the inverted covariance matrix. So if S is the
covariance matrix, this is C = chol(S^(-1)) satisfying S^(-1) = C^t*C.}

\item{matrix}{A column reduced edge optimisation matrix (typically given by
the edge_optimisation_matrix$column_reduced).}

\item{graph}{The admixture graph. Here to give default value for:}

\item{parameters}{We need to know variable names.}
}
\value{
The output is a function. Given two input vectors of admix variables and edge variables,
         this function calculates l = -1/2*(F-f)^t*S^(-1)*(F-f). Up to a constant error and multiplier
         that is the log likelihood, as the likelihood is det(2*pi*S)^(-1/2)*exp(-l/2).
}
\description{
So basically this is just cost_function() that doesn't optimize the edge variables but has them as
an argument instead. We use the edge optimisation matrix again because it can be calculated beforehand 
and evaluating it for various values of admix variables is fast.
}

